" ====================
" General
" ====================
set nocompatible

filetype indent on            " Enable filetype-specific indenting
filetype plugin on            " Enable filetype-specific plugins

set autoread

if &term =~ "xterm" || &term =~ "256" || $DISPLAY != "" || $HAS_256_COLORS == "yes"
  set t_Co=256
endif

" Remember last cursor position when reopening a file
if has("autocmd")
  au!
  autocmd BufReadPost *
      \ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
      \ |   exe "normal! g`\""
      \ | endif
endif

" ====================
" Status line
" ====================
syntax enable
syntax on

set hlsearch
set incsearch
set visualbell t_vb=          " Turn off bell
set ignorecase
set bs=2

" ====================
" User interface
" ====================
set ruler
set number

set showmatch

" ====================
" Editing
" ====================
set expandtab                 " Spaces instead of tabs

set shiftwidth=2
set tabstop=2
set softtabstop=2

set smarttab

" ====================
" vim-airline plugin settings
" ====================
let g:airline_powerline_fonts=1
let g:airline_theme='night_owl'

" ====================
" tmuxline plugin settings
" ====================
let g:tmuxline_preset = {
  \ 'a': '#S',
  \ 'b': '',
  \ 'c': '',
  \ 'win': '#I #W',
  \ 'cwin': ['#I', '#W'],
  \ 'x': '#(~/.tmux/plugins/tmux-battery/scripts/battery_icon.sh) #(~/.tmux/plugins/tmux-battery/scripts/battery_percentage.sh)',
  \ 'y': ['%a', '%Y-%m-%d', '%R'],
  \ 'z': '#h'}

filetype off

" ====================
" Vundle
" ====================
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

" Color scheme
Plugin 'haishanh/night-owl.vim'

" Status bar
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'edkolev/tmuxline.vim'

" Navigation tree
Plugin 'preservim/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'

" Git
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" Language server
Plugin 'dense-analysis/ale'

call vundle#end()

filetype plugin indent on
filetype on

" ====================
" Colour scheme
" ====================

if (has("termguicolors"))
 set termguicolors
endif

try
  colorscheme night-owl
catch /^Vim\%((\a\+)\)\=:E185/
  colorscheme default
  set background=dark
endtry

" ====================
" NERDTree
" ====================

" Set window width (default: 31)
let g:NERDTreeWinSize=47

" Start NERDTree, unless a file or session is specified, eg. vim -S session_file.vim.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists('s:std_in') && v:this_session == '' | NERDTree | endif

" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.
autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
    \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif

" ====================
" ALE
" ====================

let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_linter_aliases = {
  \'tf': ['terraform']
  \}
let g:ale_linters = {
  \'javascript': ['eslint']
  \}
let g:ale_open_list = 1
